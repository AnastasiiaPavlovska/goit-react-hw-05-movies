{"version":3,"file":"static/js/622.c315d5cf.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.styled.jsx","pages/MovieDetails.js","services/theMoiveApi.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Container = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  background-color: #fff;\n  margin-bottom: 20px;\n  width: 300px;\n  margin: 0 auto;\n`\n\nexport const Poster = styled.img`\n\nwidth: 100%;\n  max-width: 300px;\n  height: auto;\n  border-radius: 10px;\n`\n\nexport const Title = styled.h1`\n\nfont-size: 1.5rem;\nmargin: 10px 0;\n\n`\n\n\nexport const FirstParagraph = styled.p`\nmargin: 10px 0;\n\n`\n\nexport const SecondParagraph = styled.p`\n\nfont-weight: bold;\n  color: #3498db;\n  margin-top: 10px;\n\n`\n","import {Container,Poster,Title,FirstParagraph,SecondParagraph} from './MovieCard.styled';\n\n\nconst MovieCard = ({posterPath,title,vote_average,overview,genreNames}) => {\n\n\n  return (\n\n    <Container>\n      <Poster src={`https://image.tmdb.org/t/p/w300${posterPath}`} alt={title} width='300'/>\n      <Title>{title}</Title>\n      <p>{vote_average}</p>\n      <h2>Overview</h2>\n      <FirstParagraph>{overview}</FirstParagraph>\n      <h3>Genres</h3>\n      <SecondParagraph>{genreNames}</SecondParagraph>\n    </Container>\n  )\n\n}\n\nexport default MovieCard;\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h3`\n  \ntext-align:center;\npadding: 10px;\nmargin-bottom: 15px;\nfont-size:24px;\n\n`\n\nexport const List = styled.ul`\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center; \n   margin-bottom:15px;\n`\n\nexport const Item = styled.li`\n\nfont-size:20px;\n\n`","import { useState, useEffect } from 'react';\nimport { getMovieById } from '../services/theMoiveApi';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport {\n  NavLink,\n  useParams,\n  Outlet,\n  useLocation,\n  Link,\n} from 'react-router-dom';\nimport { Title, List, Item } from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const movieData = await getMovieById(movieId);\n        const {\n          title = 'No title',\n          vote_average,\n          overview,\n          genres,\n          poster_path,\n        } = movieData;\n        setMovie({ title, vote_average, overview, genres, poster_path });\n      } catch (error) {\n        console.log(error.messsage);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path } = movie;\n\n  const genreNames = genres ? genres.map(genre => genre.name).join(' ') : '';\n  const posterPath = poster_path ? poster_path : '';\n\n  return (\n    <>\n      <Link to={backLinkHref}>Back to products</Link>\n      <MovieCard\n        posterPath={posterPath}\n        title={title}\n        vote_average={vote_average}\n        overview={overview}\n        genreNames={genreNames}\n      />\n\n      <Title>Additional informations</Title>\n      <List>\n        <Item>\n          <NavLink to={`cast`} id={movieId}>\n            Cast\n          </NavLink>\n        </Item>\n        <Item>\n          <NavLink to={`reviews`} id={movieId}>\n            Reviews\n          </NavLink>\n        </Item>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '733e69ecbc0d951ee5920192b66b3d6f';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n\n\n  try {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Poster","img","_templateObject2","Title","h1","_templateObject3","FirstParagraph","p","_templateObject4","SecondParagraph","_templateObject5","_ref","posterPath","title","vote_average","overview","genreNames","_jsxs","children","_jsx","src","concat","alt","width","h3","List","ul","Item","li","_location$state$from","_location$state","location","useLocation","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","backLinkHref","state","from","useEffect","fetchMovie","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieData","_movieData$title","_title","_vote_average","_overview","_genres","_poster_path","wrap","_context","prev","next","getMovieById","sent","genres","poster_path","t0","console","log","messsage","stop","apply","arguments","map","genre","name","join","_Fragment","Link","to","MovieCard","NavLink","id","Outlet","axios","defaults","baseURL","API_KEY","getMovieTrends","_x","_getMovieTrends","currentPage","_yield$axios$get","data","get","abrupt","results","Notiflix","failure","message","getMovieByQuery","_x2","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","_x3","_getMovieById","_callee3","_yield$axios$get3","_context3","getCastById","_x4","_getCastById","_callee4","_yield$axios$get4","_context4","getReviewsById","_x5","_getReviewsById","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}