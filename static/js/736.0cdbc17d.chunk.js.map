{"version":3,"file":"static/js/736.0cdbc17d.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/theMoiveApi.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n     margin: 0 auto;\n    padding: 0;\n    list-style: none;\n\n\n`\n\nexport const Item = styled.li`\n\npadding:5px;\n color:inherit;\n\n transition: transform 0.2s ease;\n\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n :hover {\n\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`\n\nexport const Title = styled.h3`\n\n max-width:200px;\n text-align:center;\n\n\n\n`\n\nexport const SubTitle = styled.p`\nmax-width:200px;\ntext-align:center;\n\n`\n\nexport const Placeholder = styled.div`\n\nwidth:200px;\nheight: 300px;\nbackground-color: #fff;\nfont-style: italic;\ndisplay:flex;\njustify-content:center;\nalign-items:center;\n`\n","import { getCastById } from '../../services/theMoiveApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {List,Item,Title,SubTitle,Placeholder} from './Cast.styled';\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState({});\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      try {\n        const castsData = await getCastById(movieId);\n        setCasts(castsData);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchCasts();\n  }, [movieId]);\n\n  const {cast} = casts;\n\n  return (\n    <div>\n      {cast ? (\n        <List>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <Item key={id}>\n              {profile_path ? ( <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name} width='200'/>) :<Placeholder>Photo will be added soon...</Placeholder>}\n              <Title>{name}</Title>\n              <SubTitle>{character}</SubTitle>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>Loading cast information...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '733e69ecbc0d951ee5920192b66b3d6f';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n\n\n  try {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","Title","h3","_templateObject3","SubTitle","p","_templateObject4","Placeholder","div","_templateObject5","movieId","useParams","_useState","useState","_useState2","_slicedToArray","casts","setCasts","useEffect","fetchCasts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","castsData","wrap","_context","prev","next","getCastById","sent","t0","console","log","message","stop","apply","arguments","cast","_jsx","children","map","_ref2","id","name","character","profile_path","_jsxs","src","concat","alt","width","axios","defaults","baseURL","API_KEY","getMovieTrends","_x","_getMovieTrends","currentPage","_yield$axios$get","data","get","abrupt","results","Notiflix","failure","getMovieByQuery","_x2","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","getMovieById","_x3","_getMovieById","_callee3","_yield$axios$get3","_context3","_x4","_getCastById","_callee4","_yield$axios$get4","_context4","getReviewsById","_x5","_getReviewsById","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}