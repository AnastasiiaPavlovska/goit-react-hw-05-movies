{"version":3,"file":"static/js/387.f0314026.chunk.js","mappings":"6QAGaA,EAAOC,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iSAehBC,EAAOJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kYAkBhBI,EAAQP,EAAAA,EAAOQ,EAACC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0D,SCO7B,EAtCgB,WACd,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,IAE1BI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAepB,GAAS,KAAD,EAA3Ce,EAAWE,EAAAI,KACjBd,EAAWQ,GAAaE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAExBM,QAAQC,IAAIP,EAAAK,GAAMG,SAAS,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,kBAE9B,kBAPiB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KASlBnB,GACF,GAAG,CAACT,IAEJ,IAAQ6B,EAAYvB,EAAZuB,QAER,OACEC,EAAAA,EAAAA,KAAA,OAAAC,SACGF,GACCC,EAAAA,EAAAA,KAACzC,EAAI,CAAA0C,SACFF,EAAQG,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAEF,EAAFE,GAAIC,EAAOH,EAAPG,QAAO,OACjCC,EAAAA,EAAAA,MAAC3C,EAAI,CAAAqC,SAAA,EACHM,EAAAA,EAAAA,MAACxC,EAAK,CAAAkC,SAAA,CAAC,WAASG,MAChBJ,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,MAFKD,EAGJ,OAIXL,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAIX,C,6MCtCAO,EAAAA,EAAMC,SAASC,QAAU,gCAEzB,IAAMC,EAAU,mCAET,SAAeC,EAAcC,GAAA,OAAAC,EAAAjB,MAAC,KAADC,UAAA,CAYnC,SAAAgB,IAAA,OAAAA,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAZM,SAAAC,EAA8B+B,GAAW,IAAAC,EAAAC,EAAA,OAAAnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGrBmB,EAAAA,EAAMU,IAAI,4BAADC,OAA6BR,EAAO,UAAAQ,OAASJ,IAAe,KAAD,EAA/E,OAA+EC,EAAA7B,EAAAI,KAAnF0B,EAAID,EAAJC,KAAI9B,EAAAiC,OAAA,SAELH,EAAKlB,SAAO,cAAAZ,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAAAA,EAAAiC,OAAA,SAGZC,IAAAA,OAAgBC,QAAQ,GAADH,OACzBhC,EAAAK,GAAMG,QAAO,wCACjB,yBAAAR,EAAAS,OAAA,GAAAZ,EAAA,mBAEJa,MAAA,KAAAC,UAAA,CAEM,SAAeyB,EAAeC,GAAA,OAAAC,EAAA5B,MAAA,KAAAC,UAAA,CAcpC,SAAA2B,IAAA,OAAAA,GAAA5C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAdM,SAAA2C,EAAgCC,GAAK,IAAAC,EAAAX,EAAA,OAAAnC,EAAAA,EAAAA,KAAAI,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAKnBmB,EAAAA,EAAMU,IAAI,wBAADC,OAAyBR,EAAO,WAAAQ,OAAUQ,IAAS,KAAD,EAArE,OAAqEC,EAAAC,EAAAtC,KAAzE0B,EAAIW,EAAJX,KAAIY,EAAAT,OAAA,SAEJH,GAAI,cAAAY,EAAAzC,KAAA,EAAAyC,EAAArC,GAAAqC,EAAA,SAAAA,EAAAT,OAAA,SAGJC,IAAAA,OAAgBC,QAAQ,GAADH,OACzBU,EAAArC,GAAMG,QAAO,uCACjB,yBAAAkC,EAAAjC,OAAA,GAAA8B,EAAA,mBAEJ7B,MAAA,KAAAC,UAAA,CAEM,SAAegC,EAAYC,GAAA,OAAAC,EAAAnC,MAAC,KAADC,UAAA,CAUjC,SAAAkC,IAAA,OAAAA,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAVM,SAAAkD,EAA4B5B,GAAE,IAAA6B,EAAAjB,EAAA,OAAAnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA/C,KAAA,EAAA+C,EAAA9C,KAAA,EAEVmB,EAAAA,EAAMU,IAAI,SAADC,OAAUd,EAAE,aAAAc,OAAYR,IAAW,KAAD,EAAtD,OAAsDuB,EAAAC,EAAA5C,KAA1D0B,EAAIiB,EAAJjB,KAAIkB,EAAAf,OAAA,SAELH,GAAI,cAAAkB,EAAA/C,KAAA,EAAA+C,EAAA3C,GAAA2C,EAAA,SAAAA,EAAAf,OAAA,SAEJC,IAAAA,OAAgBC,QAAQ,GAADH,OACzBgB,EAAA3C,GAAMG,QAAO,wCACjB,yBAAAwC,EAAAvC,OAAA,GAAAqC,EAAA,mBAEJpC,MAAA,KAAAC,UAAA,CAEM,SAAesC,EAAWC,GAAA,OAAAC,EAAAzC,MAAC,KAADC,UAAA,CAYhC,SAAAwC,IAAA,OAAAA,GAAAzD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAZM,SAAAwD,EAA2BlC,GAAE,IAAAmC,EAAAvB,EAAA,OAAAnC,EAAAA,EAAAA,KAAAI,MAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cAAAoD,EAAArD,KAAA,EAAAqD,EAAApD,KAAA,EAETmB,EAAAA,EAAMU,IAAI,SAADC,OACrBd,EAAE,qBAAAc,OAAoBR,IAC/B,KAAD,EAFW,OAEX6B,EAAAC,EAAAlD,KAFO0B,EAAIuB,EAAJvB,KAAIwB,EAAArB,OAAA,SAILH,GAAI,cAAAwB,EAAArD,KAAA,EAAAqD,EAAAjD,GAAAiD,EAAA,SAAAA,EAAArB,OAAA,SAEJC,IAAAA,OAAgBC,QAAQ,GAADH,OACzBsB,EAAAjD,GAAMG,QAAO,wCACjB,yBAAA8C,EAAA7C,OAAA,GAAA2C,EAAA,mBAEJ1C,MAAA,KAAAC,UAAA,CAGM,SAAeR,EAAcoD,GAAA,OAAAC,EAAA9C,MAAA,KAAAC,UAAA,CAcnC,SAAA6C,IAAA,OAAAA,GAAA9D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAdM,SAAA6D,EAA+BvC,GAAE,IAAAwC,EAAA5B,EAAA,OAAAnC,EAAAA,EAAAA,KAAAI,MAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAA1D,KAAA,EAAA0D,EAAAzD,KAAA,EAIXmB,EAAAA,EAAMU,IAAI,SAADC,OACjBd,EAAE,qBAAAc,OAAoBR,IAClC,OAFU,OAEVkC,EAAAC,EAAAvD,KAFM0B,EAAI4B,EAAJ5B,KAAI6B,EAAA1B,OAAA,SAIJH,GAAI,cAAA6B,EAAA1D,KAAA,EAAA0D,EAAAtD,GAAAsD,EAAA,SAAAA,EAAA1B,OAAA,SAEJC,IAAAA,OAAgBC,QAAQ,GAADH,OACvB2B,EAAAtD,GAAMG,QAAO,wCACjB,yBAAAmD,EAAAlD,OAAA,GAAAgD,EAAA,mBAEV/C,MAAA,KAAAC,UAAA,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/theMoiveApi.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\n\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n   margin-right: auto;\n\n`\n\nexport const Item = styled.li`\n\n color:inherit;\n\n transition: transform 0.2s ease;\n\n box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n\n :hover {\n\n    transform: scale(1.05);\n    font-weight: 500;\n\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n }\n\n`\n\nexport const Title = styled.p`\n\n max-width:200px;\n text-align:center;\n\n\n\n`\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from '../../services/theMoiveApi';\nimport {List,Item,Title} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState({});\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsData = await getReviewsById(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  const { results } = reviews;\n\n  return (\n    <div>\n      {results ? (\n        <List>\n          {results.map(({ author, id, content }) => (\n            <Item key={id}>\n              <Title>Author: {author}</Title>\n              <p>{content}</p>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '733e69ecbc0d951ee5920192b66b3d6f';\n\nexport async function getMovieTrends(currentPage) {\n  try {\n\n    const { data } = await axios.get(`trending/all/day?api_key=${API_KEY}&page=${currentPage}`);\n\n    return data.results;\n\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getMovieByQuery (query) {\n\n\n  try {\n\n    const {data} = await axios.get(`search/movie?api_key=${API_KEY}&query=${query}`);\n\n    return data;\n  } catch (error) {\n\n    return Notiflix.Notify.failure(\n      `${error.message}, plese contact the administrator`\n    )\n  }\n}\n\nexport async function getMovieById(id) {\n  try {\n    const { data } = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\nexport async function getCastById(id) {\n  try {\n    const { data } = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    return Notiflix.Notify.failure(\n      `${error.message}, please contact the administrator`\n    );\n  }\n}\n\n\nexport async function getReviewsById (id) {\n\n    try {\n\n        const {data} = await axios.get(\n            `movie/${id}/reviews?api_key=${API_KEY}`\n        )\n\n        return data;\n    } catch(error) {\n        return Notiflix.Notify.failure(\n            `${error.message}, please contact the administrator`\n          );\n    }\n}\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","Title","p","_templateObject3","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","reviewsData","wrap","_context","prev","next","getReviewsById","sent","t0","console","log","message","stop","apply","arguments","results","_jsx","children","map","_ref2","author","id","content","_jsxs","axios","defaults","baseURL","API_KEY","getMovieTrends","_x","_getMovieTrends","currentPage","_yield$axios$get","data","get","concat","abrupt","Notiflix","failure","getMovieByQuery","_x2","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","getMovieById","_x3","_getMovieById","_callee3","_yield$axios$get3","_context3","getCastById","_x4","_getCastById","_callee4","_yield$axios$get4","_context4","_x5","_getReviewsById","_callee5","_yield$axios$get5","_context5"],"sourceRoot":""}